# ----------------------------------------------------------------------------
# user and group to run as.
# ----------------------------------------------------------------------------
user nginx nginx;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   Number of nginx workers.
# ----------------------------------------------------------------------------
worker_processes 2;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   PID of the nginx master process.
# ----------------------------------------------------------------------------
pid /var/run/nginx.pid;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   Number of worker connections. 1024 is a good default.
# ----------------------------------------------------------------------------
events {
    worker_connections  1024;
    use epoll;
}
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   HTTP module where we configure HTTP access.
# ----------------------------------------------------------------------------
http {
    # ------------------------------------------------------------------------
    #   Pull in mime-types. You can break out your config into as many
    #   includes as you want to make it cleaner.
    # ------------------------------------------------------------------------
    include       mime.types;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Set a default MIME type for the rare sitaution that nothing matches
    #   from the mime-type include.
    # ------------------------------------------------------------------------
    default_type  application/octet-stream;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Configure the log format.
    # ------------------------------------------------------------------------
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # ------------------------------------------------------------------------

    # ------------------------------------------------------------------------
    #   Main access log.
    # ------------------------------------------------------------------------
    access_log  /var/log/nginx_access.log  main;
    # ------------------------------------------------------------------------

    # ------------------------------------------------------------------------
    #   Main error log.
    # ------------------------------------------------------------------------
    error_log  /var/log/nginx_error.log debug;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   sendfile() copies data from one file descriptor to another, and
    #   because this is done within the kernel it is more efficient than
    #   the combination of read() and write(), which would require
    #   transferring data to and from the user space.
    # ------------------------------------------------------------------------    
    sendfile        on;
    # ------------------------------------------------------------------------    
    
    # ------------------------------------------------------------------------    
    #   tcp_nopush permits or forbids the use of the socket options
    #   TCP_NOPUSH on FreeBSD or TCP_CORK on Linux. Only available when using
    #   sendfile.
    #
    #   If set, don't send out partial frames. This is useful for prepending
    #   headers before calling sendfile, or for throughput optimization.
    # ------------------------------------------------------------------------        
    tcp_nopush     on;
    # ------------------------------------------------------------------------    

    # ------------------------------------------------------------------------    
    #   tcp_nodelay allows or forbids the use of the socket option
    #   TCP_NODELAY. Only included in keep-alive connections.
    #
    #   TCP_NODELAY is for a specific purpose; to disable the Nagle
    #   buffering algorithm. It should only be set for applications that send
    #   frequent small bursts of information without getting an immediate
    #   response, where timely delivery of data is required (the canonical
    #   example is mouse movements).
    # ------------------------------------------------------------------------    
    tcp_nodelay  off;
    # ------------------------------------------------------------------------    
    
    #keepalive_timeout  0;
    keepalive_timeout  65;

    # ------------------------------------------------------------------------    
    #   Output compression saved bandwidth.
    # ------------------------------------------------------------------------    
    gzip              on;
    gzip_http_version 1.0;
    gzip_comp_level   9;
    gzip_proxied      any;
    gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Proxy port 80 traffic to the HAProxy instance.
    # ------------------------------------------------------------------------
    server {
        listen       80;
        server_name  192.168.1.104;
        proxy_set_header X-Real-Ip $proxy_add_x_forwarded_for;
        proxy_set_header X-Scheme http;
        location / {
            proxy_pass http://127.0.0.1:7080;
        }
    }
    
    server {
        listen       80 default;
        server_name_in_redirect off;
        rewrite      ^ http://192.168.1.104$request_uri;
    }
    # ------------------------------------------------------------------------

    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
# ----------------------------------------------------------------------------