# ----------------------------------------------------------------------------
#   References;
#   http://www.cyberciti.biz/tips/linux-unix-bsd-nginx-webserver-security.html
#   http://wiki.nginx.org/HttpCoreModule
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
# user and group to run as.
# ----------------------------------------------------------------------------
user nginx nginx;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   Number of nginx workers.
# ----------------------------------------------------------------------------
worker_processes 2;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   PID of the nginx master process.
# ----------------------------------------------------------------------------
pid /var/run/nginx.pid;
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   Number of worker connections. 1024 is a good default.
# ----------------------------------------------------------------------------
events {
    worker_connections  1024;
    use epoll;
}
# ----------------------------------------------------------------------------

# ----------------------------------------------------------------------------
#   HTTP module where we configure HTTP access.
# ----------------------------------------------------------------------------
http {
    # ------------------------------------------------------------------------
    #   Pull in mime-types. You can break out your config into as many
    #   includes as you want to make it cleaner.
    # ------------------------------------------------------------------------
    include       mime.types;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Set a default MIME type for the rare sitaution that nothing matches
    #   from the mime-type include.
    # ------------------------------------------------------------------------
    default_type  application/octet-stream;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Configure the log format.
    # ------------------------------------------------------------------------
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    # ------------------------------------------------------------------------

    # ------------------------------------------------------------------------
    #   Main access log.
    # ------------------------------------------------------------------------
    access_log  /var/log/nginx_access.log  main;
    # ------------------------------------------------------------------------

    # ------------------------------------------------------------------------
    #   Main error log.
    # ------------------------------------------------------------------------
    error_log  /var/log/nginx_error.log debug;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   sendfile() copies data from one file descriptor to another, and
    #   because this is done within the kernel it is more efficient than
    #   the combination of read() and write(), which would require
    #   transferring data to and from the user space.
    # ------------------------------------------------------------------------    
    sendfile        on;
    # ------------------------------------------------------------------------    
    
    # ------------------------------------------------------------------------    
    #   tcp_nopush permits or forbids the use of the socket options
    #   TCP_NOPUSH on FreeBSD or TCP_CORK on Linux. Only available when using
    #   sendfile.
    #
    #   If set, don't send out partial frames. This is useful for prepending
    #   headers before calling sendfile, or for throughput optimization.
    # ------------------------------------------------------------------------        
    tcp_nopush     on;
    # ------------------------------------------------------------------------    

    # ------------------------------------------------------------------------    
    #   tcp_nodelay allows or forbids the use of the socket option
    #   TCP_NODELAY. Only included in keep-alive connections.
    #
    #   TCP_NODELAY is for a specific purpose; to disable the Nagle
    #   buffering algorithm. It should only be set for applications that send
    #   frequent small bursts of information without getting an immediate
    #   response, where timely delivery of data is required (the canonical
    #   example is mouse movements).
    # ------------------------------------------------------------------------    
    tcp_nodelay  off;
    # ------------------------------------------------------------------------        

    # ------------------------------------------------------------------------    
    #   Output compression saved bandwidth.
    # ------------------------------------------------------------------------    
    gzip              on;
    gzip_http_version 1.0;
    gzip_comp_level   9;
    gzip_proxied      any;
    gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript application/json;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Don't show nginx version information in error pages.
    # ------------------------------------------------------------------------
    server_tokens off;
    # ------------------------------------------------------------------------
    
    # ------------------------------------------------------------------------
    #   Redirect port 80 traffic to port 443.
    # ------------------------------------------------------------------------
    server {
        listen 80;
        server_name 192.168.1.70;
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Frame-Options DENY;
        rewrite ^ https://192.168.1.70$request_uri? permanent;        
    }
    
    # ------------------------------------------------------------------------
    #   Proxy port 443 traffic to the HAProxy instance.
    # ------------------------------------------------------------------------
    server {
        listen       443;
        server_name  192.168.1.70;
        
        ssl on;
        ssl_certificate     /home/ubuntu/myCA/server_crt.pem;
        ssl_certificate_key /home/ubuntu/myCA/server_key.pem;
        
        ssl_session_cache    shared:SSL:10m;
        ssl_session_timeout  10m;

        ssl_protocols  SSLv3 TLSv1;
        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers   on;
        
        add_header Strict-Transport-Security max-age=15768000;
        add_header X-Frame-Options DENY;
        
        proxy_set_header X-Real-Ip $remote_addr;
        proxy_set_header X-Scheme https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        location / {
            proxy_pass http://127.0.0.1:7080;
        }
        
        # Restrict HTTP request methods.
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }
    }
    # ------------------------------------------------------------------------
}
# ----------------------------------------------------------------------------